/*
* generated by Xtext
*/
grammar InternalModuleDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.ModuleDslGrammarAccess;

}

@parser::members {
 
 	private ModuleDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ModuleDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleLANGUAGE
entryRuleLANGUAGE 
:
{ before(grammarAccess.getLANGUAGERule()); }
	 ruleLANGUAGE
{ after(grammarAccess.getLANGUAGERule()); } 
	 EOF 
;

// Rule LANGUAGE
ruleLANGUAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getLANGUAGEAccess().getModulesAssignment()); }
(rule__LANGUAGE__ModulesAssignment)
{ after(grammarAccess.getLANGUAGEAccess().getModulesAssignment()); }
)
(
{ before(grammarAccess.getLANGUAGEAccess().getModulesAssignment()); }
(rule__LANGUAGE__ModulesAssignment)*
{ after(grammarAccess.getLANGUAGEAccess().getModulesAssignment()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMODULE_DECL
entryRuleMODULE_DECL 
:
{ before(grammarAccess.getMODULE_DECLRule()); }
	 ruleMODULE_DECL
{ after(grammarAccess.getMODULE_DECLRule()); } 
	 EOF 
;

// Rule MODULE_DECL
ruleMODULE_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMODULE_DECLAccess().getGroup()); }
(rule__MODULE_DECL__Group__0)
{ after(grammarAccess.getMODULE_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTRATEGY
entryRuleSTRATEGY 
:
{ before(grammarAccess.getSTRATEGYRule()); }
	 ruleSTRATEGY
{ after(grammarAccess.getSTRATEGYRule()); } 
	 EOF 
;

// Rule STRATEGY
ruleSTRATEGY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTRATEGYAccess().getGroup()); }
(rule__STRATEGY__Group__0)
{ after(grammarAccess.getSTRATEGYAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTERFACE
entryRuleINTERFACE 
:
{ before(grammarAccess.getINTERFACERule()); }
	 ruleINTERFACE
{ after(grammarAccess.getINTERFACERule()); } 
	 EOF 
;

// Rule INTERFACE
ruleINTERFACE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTERFACEAccess().getGroup()); }
(rule__INTERFACE__Group__0)
{ after(grammarAccess.getINTERFACEAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBODY
entryRuleBODY 
:
{ before(grammarAccess.getBODYRule()); }
	 ruleBODY
{ after(grammarAccess.getBODYRule()); } 
	 EOF 
;

// Rule BODY
ruleBODY
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBODYAccess().getGroup()); }
(rule__BODY__Group__0)
{ after(grammarAccess.getBODYAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCRITERION_DECL
entryRuleCRITERION_DECL 
:
{ before(grammarAccess.getCRITERION_DECLRule()); }
	 ruleCRITERION_DECL
{ after(grammarAccess.getCRITERION_DECLRule()); } 
	 EOF 
;

// Rule CRITERION_DECL
ruleCRITERION_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getGroup()); }
(rule__CRITERION_DECL__Group__0)
{ after(grammarAccess.getCRITERION_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDATASEL_DECL
entryRuleDATASEL_DECL 
:
{ before(grammarAccess.getDATASEL_DECLRule()); }
	 ruleDATASEL_DECL
{ after(grammarAccess.getDATASEL_DECLRule()); } 
	 EOF 
;

// Rule DATASEL_DECL
ruleDATASEL_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getGroup()); }
(rule__DATASEL_DECL__Group__0)
{ after(grammarAccess.getDATASEL_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCRITERION
entryRuleCRITERION 
:
{ before(grammarAccess.getCRITERIONRule()); }
	 ruleCRITERION
{ after(grammarAccess.getCRITERIONRule()); } 
	 EOF 
;

// Rule CRITERION
ruleCRITERION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCRITERIONAccess().getCritAssignment()); }
(rule__CRITERION__CritAssignment)
{ after(grammarAccess.getCRITERIONAccess().getCritAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDATASEL
entryRuleDATASEL 
:
{ before(grammarAccess.getDATASELRule()); }
	 ruleDATASEL
{ after(grammarAccess.getDATASELRule()); } 
	 EOF 
;

// Rule DATASEL
ruleDATASEL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDATASELAccess().getSelAssignment()); }
(rule__DATASEL__SelAssignment)
{ after(grammarAccess.getDATASELAccess().getSelAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractVAR_DECL
entryRuleAbstractVAR_DECL 
:
{ before(grammarAccess.getAbstractVAR_DECLRule()); }
	 ruleAbstractVAR_DECL
{ after(grammarAccess.getAbstractVAR_DECLRule()); } 
	 EOF 
;

// Rule AbstractVAR_DECL
ruleAbstractVAR_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractVAR_DECLAccess().getAlternatives()); }
(rule__AbstractVAR_DECL__Alternatives)
{ after(grammarAccess.getAbstractVAR_DECLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVAR_DECL
entryRuleVAR_DECL 
:
{ before(grammarAccess.getVAR_DECLRule()); }
	 ruleVAR_DECL
{ after(grammarAccess.getVAR_DECLRule()); } 
	 EOF 
;

// Rule VAR_DECL
ruleVAR_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVAR_DECLAccess().getGroup()); }
(rule__VAR_DECL__Group__0)
{ after(grammarAccess.getVAR_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFlow
entryRuleFlow 
:
{ before(grammarAccess.getFlowRule()); }
	 ruleFlow
{ after(grammarAccess.getFlowRule()); } 
	 EOF 
;

// Rule Flow
ruleFlow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFlowAccess().getFlowAssignment()); }
(rule__Flow__FlowAssignment)
{ after(grammarAccess.getFlowAccess().getFlowAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCST_DECL
entryRuleCST_DECL 
:
{ before(grammarAccess.getCST_DECLRule()); }
	 ruleCST_DECL
{ after(grammarAccess.getCST_DECLRule()); } 
	 EOF 
;

// Rule CST_DECL
ruleCST_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCST_DECLAccess().getGroup()); }
(rule__CST_DECL__Group__0)
{ after(grammarAccess.getCST_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTmpVAR_DECL
entryRuleTmpVAR_DECL 
:
{ before(grammarAccess.getTmpVAR_DECLRule()); }
	 ruleTmpVAR_DECL
{ after(grammarAccess.getTmpVAR_DECLRule()); } 
	 EOF 
;

// Rule TmpVAR_DECL
ruleTmpVAR_DECL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getGroup()); }
(rule__TmpVAR_DECL__Group__0)
{ after(grammarAccess.getTmpVAR_DECLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTYPE
entryRuleTYPE 
:
{ before(grammarAccess.getTYPERule()); }
	 ruleTYPE
{ after(grammarAccess.getTYPERule()); } 
	 EOF 
;

// Rule TYPE
ruleTYPE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTYPEAccess().getTypeAssignment()); }
(rule__TYPE__TypeAssignment)
{ after(grammarAccess.getTYPEAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRANGE
entryRuleRANGE 
:
{ before(grammarAccess.getRANGERule()); }
	 ruleRANGE
{ after(grammarAccess.getRANGERule()); } 
	 EOF 
;

// Rule RANGE
ruleRANGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRANGEAccess().getAlternatives()); }
(rule__RANGE__Alternatives)
{ after(grammarAccess.getRANGEAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTERVAL
entryRuleINTERVAL 
:
{ before(grammarAccess.getINTERVALRule()); }
	 ruleINTERVAL
{ after(grammarAccess.getINTERVALRule()); } 
	 EOF 
;

// Rule INTERVAL
ruleINTERVAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTERVALAccess().getGroup()); }
(rule__INTERVAL__Group__0)
{ after(grammarAccess.getINTERVALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLSET
entryRuleLSET 
:
{ before(grammarAccess.getLSETRule()); }
	 ruleLSET
{ after(grammarAccess.getLSETRule()); } 
	 EOF 
;

// Rule LSET
ruleLSET
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLSETAccess().getGroup()); }
(rule__LSET__Group__0)
{ after(grammarAccess.getLSETAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSTATEMENT
entryRuleSTATEMENT 
:
{ before(grammarAccess.getSTATEMENTRule()); }
	 ruleSTATEMENT
{ after(grammarAccess.getSTATEMENTRule()); } 
	 EOF 
;

// Rule STATEMENT
ruleSTATEMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSTATEMENTAccess().getAlternatives()); }
(rule__STATEMENT__Alternatives)
{ after(grammarAccess.getSTATEMENTAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIF_STATEMENT
entryRuleIF_STATEMENT 
:
{ before(grammarAccess.getIF_STATEMENTRule()); }
	 ruleIF_STATEMENT
{ after(grammarAccess.getIF_STATEMENTRule()); } 
	 EOF 
;

// Rule IF_STATEMENT
ruleIF_STATEMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getGroup()); }
(rule__IF_STATEMENT__Group__0)
{ after(grammarAccess.getIF_STATEMENTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLOOP_STATEMENT
entryRuleLOOP_STATEMENT 
:
{ before(grammarAccess.getLOOP_STATEMENTRule()); }
	 ruleLOOP_STATEMENT
{ after(grammarAccess.getLOOP_STATEMENTRule()); } 
	 EOF 
;

// Rule LOOP_STATEMENT
ruleLOOP_STATEMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getGroup()); }
(rule__LOOP_STATEMENT__Group__0)
{ after(grammarAccess.getLOOP_STATEMENTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleERROR_STATEMENT
entryRuleERROR_STATEMENT 
:
{ before(grammarAccess.getERROR_STATEMENTRule()); }
	 ruleERROR_STATEMENT
{ after(grammarAccess.getERROR_STATEMENTRule()); } 
	 EOF 
;

// Rule ERROR_STATEMENT
ruleERROR_STATEMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getERROR_STATEMENTAccess().getGroup()); }
(rule__ERROR_STATEMENT__Group__0)
{ after(grammarAccess.getERROR_STATEMENTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASSIGN_STATEMENT
entryRuleASSIGN_STATEMENT 
:
{ before(grammarAccess.getASSIGN_STATEMENTRule()); }
	 ruleASSIGN_STATEMENT
{ after(grammarAccess.getASSIGN_STATEMENTRule()); } 
	 EOF 
;

// Rule ASSIGN_STATEMENT
ruleASSIGN_STATEMENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getGroup()); }
(rule__ASSIGN_STATEMENT__Group__0)
{ after(grammarAccess.getASSIGN_STATEMENTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVAR_REF
entryRuleVAR_REF 
:
{ before(grammarAccess.getVAR_REFRule()); }
	 ruleVAR_REF
{ after(grammarAccess.getVAR_REFRule()); } 
	 EOF 
;

// Rule VAR_REF
ruleVAR_REF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVAR_REFAccess().getVariableAssignment()); }
(rule__VAR_REF__VariableAssignment)
{ after(grammarAccess.getVAR_REFAccess().getVariableAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEXPRESSION
entryRuleEXPRESSION 
:
{ before(grammarAccess.getEXPRESSIONRule()); }
	 ruleEXPRESSION
{ after(grammarAccess.getEXPRESSIONRule()); } 
	 EOF 
;

// Rule EXPRESSION
ruleEXPRESSION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEXPRESSIONAccess().getORParserRuleCall()); }
	ruleOR
{ after(grammarAccess.getEXPRESSIONAccess().getORParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOR
entryRuleOR 
:
{ before(grammarAccess.getORRule()); }
	 ruleOR
{ after(grammarAccess.getORRule()); } 
	 EOF 
;

// Rule OR
ruleOR
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getORAccess().getGroup()); }
(rule__OR__Group__0)
{ after(grammarAccess.getORAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAND
entryRuleAND 
:
{ before(grammarAccess.getANDRule()); }
	 ruleAND
{ after(grammarAccess.getANDRule()); } 
	 EOF 
;

// Rule AND
ruleAND
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getANDAccess().getGroup()); }
(rule__AND__Group__0)
{ after(grammarAccess.getANDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEQUAL_DIFF
entryRuleEQUAL_DIFF 
:
{ before(grammarAccess.getEQUAL_DIFFRule()); }
	 ruleEQUAL_DIFF
{ after(grammarAccess.getEQUAL_DIFFRule()); } 
	 EOF 
;

// Rule EQUAL_DIFF
ruleEQUAL_DIFF
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getGroup()); }
(rule__EQUAL_DIFF__Group__0)
{ after(grammarAccess.getEQUAL_DIFFAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCOMPARISON
entryRuleCOMPARISON 
:
{ before(grammarAccess.getCOMPARISONRule()); }
	 ruleCOMPARISON
{ after(grammarAccess.getCOMPARISONRule()); } 
	 EOF 
;

// Rule COMPARISON
ruleCOMPARISON
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCOMPARISONAccess().getGroup()); }
(rule__COMPARISON__Group__0)
{ after(grammarAccess.getCOMPARISONAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleADD_SUB
entryRuleADD_SUB 
:
{ before(grammarAccess.getADD_SUBRule()); }
	 ruleADD_SUB
{ after(grammarAccess.getADD_SUBRule()); } 
	 EOF 
;

// Rule ADD_SUB
ruleADD_SUB
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getADD_SUBAccess().getGroup()); }
(rule__ADD_SUB__Group__0)
{ after(grammarAccess.getADD_SUBAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMULT_DIV
entryRuleMULT_DIV 
:
{ before(grammarAccess.getMULT_DIVRule()); }
	 ruleMULT_DIV
{ after(grammarAccess.getMULT_DIVRule()); } 
	 EOF 
;

// Rule MULT_DIV
ruleMULT_DIV
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMULT_DIVAccess().getGroup()); }
(rule__MULT_DIV__Group__0)
{ after(grammarAccess.getMULT_DIVAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimaryExpression
entryRulePrimaryExpression 
:
{ before(grammarAccess.getPrimaryExpressionRule()); }
	 rulePrimaryExpression
{ after(grammarAccess.getPrimaryExpressionRule()); } 
	 EOF 
;

// Rule PrimaryExpression
rulePrimaryExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
(rule__PrimaryExpression__Alternatives)
{ after(grammarAccess.getPrimaryExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomic
entryRuleAtomic 
:
{ before(grammarAccess.getAtomicRule()); }
	 ruleAtomic
{ after(grammarAccess.getAtomicRule()); } 
	 EOF 
;

// Rule Atomic
ruleAtomic
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicAccess().getAlternatives()); }
(rule__Atomic__Alternatives)
{ after(grammarAccess.getAtomicAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDECIMAL
entryRuleDECIMAL 
:
{ before(grammarAccess.getDECIMALRule()); }
	 ruleDECIMAL
{ after(grammarAccess.getDECIMALRule()); } 
	 EOF 
;

// Rule DECIMAL
ruleDECIMAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDECIMALAccess().getGroup()); }
(rule__DECIMAL__Group__0)
{ after(grammarAccess.getDECIMALAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleINTEGER
entryRuleINTEGER 
:
{ before(grammarAccess.getINTEGERRule()); }
	 ruleINTEGER
{ after(grammarAccess.getINTEGERRule()); } 
	 EOF 
;

// Rule INTEGER
ruleINTEGER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getINTEGERAccess().getGroup()); }
(rule__INTEGER__Group__0)
{ after(grammarAccess.getINTEGERAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CRITERION__CritAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERIONAccess().getCritMcdcKeyword_0_0()); }

	'mcdc' 

{ after(grammarAccess.getCRITERIONAccess().getCritMcdcKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getCRITERIONAccess().getCritDcKeyword_0_1()); }

	'dc' 

{ after(grammarAccess.getCRITERIONAccess().getCritDcKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getCRITERIONAccess().getCritCcKeyword_0_2()); }

	'cc' 

{ after(grammarAccess.getCRITERIONAccess().getCritCcKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL__SelAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASELAccess().getSelRandKeyword_0_0()); }

	'rand' 

{ after(grammarAccess.getDATASELAccess().getSelRandKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getDATASELAccess().getSelEqvKeyword_0_1()); }

	'eqv' 

{ after(grammarAccess.getDATASELAccess().getSelEqvKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getDATASELAccess().getSelBvKeyword_0_2()); }

	'bv' 

{ after(grammarAccess.getDATASELAccess().getSelBvKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbstractVAR_DECL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractVAR_DECLAccess().getVAR_DECLParserRuleCall_0()); }
	ruleVAR_DECL
{ after(grammarAccess.getAbstractVAR_DECLAccess().getVAR_DECLParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractVAR_DECLAccess().getTmpVAR_DECLParserRuleCall_1()); }
	ruleTmpVAR_DECL
{ after(grammarAccess.getAbstractVAR_DECLAccess().getTmpVAR_DECLParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractVAR_DECLAccess().getCST_DECLParserRuleCall_2()); }
	ruleCST_DECL
{ after(grammarAccess.getAbstractVAR_DECLAccess().getCST_DECLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__FlowAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getFlowInKeyword_0_0()); }

	'in' 

{ after(grammarAccess.getFlowAccess().getFlowInKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getFlowAccess().getFlowOutKeyword_0_1()); }

	'out' 

{ after(grammarAccess.getFlowAccess().getFlowOutKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getFlowAccess().getFlowInoutKeyword_0_2()); }

	'inout' 

{ after(grammarAccess.getFlowAccess().getFlowInoutKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TYPE__TypeAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTYPEAccess().getTypeIntKeyword_0_0()); }

	'int' 

{ after(grammarAccess.getTYPEAccess().getTypeIntKeyword_0_0()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeRealKeyword_0_1()); }

	'real' 

{ after(grammarAccess.getTYPEAccess().getTypeRealKeyword_0_1()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeBoolKeyword_0_2()); }

	'bool' 

{ after(grammarAccess.getTYPEAccess().getTypeBoolKeyword_0_2()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeEnumKeyword_0_3()); }

	'enum' 

{ after(grammarAccess.getTYPEAccess().getTypeEnumKeyword_0_3()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeBitKeyword_0_4()); }

	'bit' 

{ after(grammarAccess.getTYPEAccess().getTypeBitKeyword_0_4()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeHexKeyword_0_5()); }

	'hex' 

{ after(grammarAccess.getTYPEAccess().getTypeHexKeyword_0_5()); }
)

    |(
{ before(grammarAccess.getTYPEAccess().getTypeStrKeyword_0_6()); }

	'str' 

{ after(grammarAccess.getTYPEAccess().getTypeStrKeyword_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RANGE__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRANGEAccess().getINTERVALParserRuleCall_0()); }
	ruleINTERVAL
{ after(grammarAccess.getRANGEAccess().getINTERVALParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRANGEAccess().getLSETParserRuleCall_1()); }
	ruleLSET
{ after(grammarAccess.getRANGEAccess().getLSETParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__LsqbrAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getLsqbrRightSquareBracketKeyword_0_0_0()); }

	']' 

{ after(grammarAccess.getINTERVALAccess().getLsqbrRightSquareBracketKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getINTERVALAccess().getLsqbrLeftSquareBracketKeyword_0_0_1()); }

	'[' 

{ after(grammarAccess.getINTERVALAccess().getLsqbrLeftSquareBracketKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__RsqbrAlternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getRsqbrRightSquareBracketKeyword_4_0_0()); }

	']' 

{ after(grammarAccess.getINTERVALAccess().getRsqbrRightSquareBracketKeyword_4_0_0()); }
)

    |(
{ before(grammarAccess.getINTERVALAccess().getRsqbrLeftSquareBracketKeyword_4_0_1()); }

	'[' 

{ after(grammarAccess.getINTERVALAccess().getRsqbrLeftSquareBracketKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getGroup_0()); }
(rule__Literal__Group_0__0)
{ after(grammarAccess.getLiteralAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_1()); }
(rule__Literal__Group_1__0)
{ after(grammarAccess.getLiteralAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_2()); }
(rule__Literal__Group_2__0)
{ after(grammarAccess.getLiteralAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_3()); }
(rule__Literal__Group_3__0)
{ after(grammarAccess.getLiteralAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_4()); }
(rule__Literal__Group_4__0)
{ after(grammarAccess.getLiteralAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_5()); }
(rule__Literal__Group_5__0)
{ after(grammarAccess.getLiteralAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_6()); }
(rule__Literal__Group_6__0)
{ after(grammarAccess.getLiteralAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getGroup_7()); }
(rule__Literal__Group_7__0)
{ after(grammarAccess.getLiteralAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__STATEMENT__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTATEMENTAccess().getAbstractVAR_DECLParserRuleCall_0()); }
	ruleAbstractVAR_DECL
{ after(grammarAccess.getSTATEMENTAccess().getAbstractVAR_DECLParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSTATEMENTAccess().getIF_STATEMENTParserRuleCall_1()); }
	ruleIF_STATEMENT
{ after(grammarAccess.getSTATEMENTAccess().getIF_STATEMENTParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSTATEMENTAccess().getLOOP_STATEMENTParserRuleCall_2()); }
	ruleLOOP_STATEMENT
{ after(grammarAccess.getSTATEMENTAccess().getLOOP_STATEMENTParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSTATEMENTAccess().getASSIGN_STATEMENTParserRuleCall_3()); }
	ruleASSIGN_STATEMENT
{ after(grammarAccess.getSTATEMENTAccess().getASSIGN_STATEMENTParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSTATEMENTAccess().getERROR_STATEMENTParserRuleCall_4()); }
	ruleERROR_STATEMENT
{ after(grammarAccess.getSTATEMENTAccess().getERROR_STATEMENTParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }

	'==' 

{ after(grammarAccess.getEQUAL_DIFFAccess().getOpEqualsSignEqualsSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getEQUAL_DIFFAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }

	'!=' 

{ after(grammarAccess.getEQUAL_DIFFAccess().getOpExclamationMarkEqualsSignKeyword_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__OpAlternatives_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getOpLessThanSignKeyword_1_1_0_0()); }

	'<' 

{ after(grammarAccess.getCOMPARISONAccess().getOpLessThanSignKeyword_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getCOMPARISONAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }

	'<=' 

{ after(grammarAccess.getCOMPARISONAccess().getOpLessThanSignEqualsSignKeyword_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getCOMPARISONAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }

	'>' 

{ after(grammarAccess.getCOMPARISONAccess().getOpGreaterThanSignKeyword_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getCOMPARISONAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }

	'>=' 

{ after(grammarAccess.getCOMPARISONAccess().getOpGreaterThanSignEqualsSignKeyword_1_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getGroup_1_0_0()); }
(rule__ADD_SUB__Group_1_0_0__0)
{ after(grammarAccess.getADD_SUBAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getADD_SUBAccess().getGroup_1_0_1()); }
(rule__ADD_SUB__Group_1_0_1__0)
{ after(grammarAccess.getADD_SUBAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Alternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getGroup_1_0_0()); }
(rule__MULT_DIV__Group_1_0_0__0)
{ after(grammarAccess.getMULT_DIVAccess().getGroup_1_0_0()); }
)

    |(
{ before(grammarAccess.getMULT_DIVAccess().getGroup_1_0_1()); }
(rule__MULT_DIV__Group_1_0_1__0)
{ after(grammarAccess.getMULT_DIVAccess().getGroup_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
(rule__PrimaryExpression__Group_0__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
(rule__PrimaryExpression__Group_1__0)
{ after(grammarAccess.getPrimaryExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPrimaryExpressionAccess().getAtomicParserRuleCall_2()); }
	ruleAtomic
{ after(grammarAccess.getPrimaryExpressionAccess().getAtomicParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getGroup_0()); }
(rule__Atomic__Group_0__0)
{ after(grammarAccess.getAtomicAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_1()); }
(rule__Atomic__Group_1__0)
{ after(grammarAccess.getAtomicAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_2()); }
(rule__Atomic__Group_2__0)
{ after(grammarAccess.getAtomicAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_3()); }
(rule__Atomic__Group_3__0)
{ after(grammarAccess.getAtomicAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_4()); }
(rule__Atomic__Group_4__0)
{ after(grammarAccess.getAtomicAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_5()); }
(rule__Atomic__Group_5__0)
{ after(grammarAccess.getAtomicAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_6()); }
(rule__Atomic__Group_6__0)
{ after(grammarAccess.getAtomicAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getAtomicAccess().getGroup_7()); }
(rule__Atomic__Group_7__0)
{ after(grammarAccess.getAtomicAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MODULE_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__0__Impl
	rule__MODULE_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getMODULE_DECLAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__1__Impl
	rule__MODULE_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getMODULE_DECLAction_1()); }
(

)
{ after(grammarAccess.getMODULE_DECLAccess().getMODULE_DECLAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__2__Impl
	rule__MODULE_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getNameAssignment_2()); }
(rule__MODULE_DECL__NameAssignment_2)
{ after(grammarAccess.getMODULE_DECLAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__3__Impl
	rule__MODULE_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getMODULE_DECLAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__4__Impl
	rule__MODULE_DECL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getStrategyAssignment_4()); }
(rule__MODULE_DECL__StrategyAssignment_4)
{ after(grammarAccess.getMODULE_DECLAccess().getStrategyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__5__Impl
	rule__MODULE_DECL__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getInterfaceAssignment_5()); }
(rule__MODULE_DECL__InterfaceAssignment_5)
{ after(grammarAccess.getMODULE_DECLAccess().getInterfaceAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__6__Impl
	rule__MODULE_DECL__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getBodyAssignment_6()); }
(rule__MODULE_DECL__BodyAssignment_6)
{ after(grammarAccess.getMODULE_DECLAccess().getBodyAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MODULE_DECL__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MODULE_DECL__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getMODULE_DECLAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__STRATEGY__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__0__Impl
	rule__STRATEGY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getSTRATEGYAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__1__Impl
	rule__STRATEGY__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getStrategyKeyword_1()); }

	'strategy' 

{ after(grammarAccess.getSTRATEGYAccess().getStrategyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__2__Impl
	rule__STRATEGY__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getSTRATEGYAction_2()); }
(

)
{ after(grammarAccess.getSTRATEGYAccess().getSTRATEGYAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__3__Impl
	rule__STRATEGY__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getSTRATEGYAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__4__Impl
	rule__STRATEGY__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getCritdeclAssignment_4()); }
(rule__STRATEGY__CritdeclAssignment_4)
{ after(grammarAccess.getSTRATEGYAccess().getCritdeclAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__5__Impl
	rule__STRATEGY__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getDataseldeclAssignment_5()); }
(rule__STRATEGY__DataseldeclAssignment_5)
{ after(grammarAccess.getSTRATEGYAccess().getDataseldeclAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__STRATEGY__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__STRATEGY__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getSTRATEGYAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__INTERFACE__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__0__Impl
	rule__INTERFACE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getINTERFACEAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERFACE__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__1__Impl
	rule__INTERFACE__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getInterfaceKeyword_1()); }

	'interface' 

{ after(grammarAccess.getINTERFACEAccess().getInterfaceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERFACE__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__2__Impl
	rule__INTERFACE__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getINTERFACEAction_2()); }
(

)
{ after(grammarAccess.getINTERFACEAccess().getINTERFACEAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERFACE__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__3__Impl
	rule__INTERFACE__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getINTERFACEAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERFACE__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__4__Impl
	rule__INTERFACE__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getINTERFACEAccess().getDeclarationAssignment_4()); }
(rule__INTERFACE__DeclarationAssignment_4)
{ after(grammarAccess.getINTERFACEAccess().getDeclarationAssignment_4()); }
)
(
{ before(grammarAccess.getINTERFACEAccess().getDeclarationAssignment_4()); }
(rule__INTERFACE__DeclarationAssignment_4)*
{ after(grammarAccess.getINTERFACEAccess().getDeclarationAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERFACE__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERFACE__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getINTERFACEAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BODY__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__0__Impl
	rule__BODY__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getBODYAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BODY__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__1__Impl
	rule__BODY__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getBodyKeyword_1()); }

	'body' 

{ after(grammarAccess.getBODYAccess().getBodyKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BODY__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__2__Impl
	rule__BODY__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getBODYAction_2()); }
(

)
{ after(grammarAccess.getBODYAccess().getBODYAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BODY__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__3__Impl
	rule__BODY__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getBODYAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BODY__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__4__Impl
	rule__BODY__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getStatementsAssignment_4()); }
(rule__BODY__StatementsAssignment_4)*
{ after(grammarAccess.getBODYAccess().getStatementsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BODY__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BODY__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getBODYAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CRITERION_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRITERION_DECL__Group__0__Impl
	rule__CRITERION_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getCritKeyword_0()); }

	'crit' 

{ after(grammarAccess.getCRITERION_DECLAccess().getCritKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRITERION_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRITERION_DECL__Group__1__Impl
	rule__CRITERION_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getCRITERION_DECLAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRITERION_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRITERION_DECL__Group__2__Impl
	rule__CRITERION_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getCRITERION_DECLAction_2()); }
(

)
{ after(grammarAccess.getCRITERION_DECLAccess().getCRITERION_DECLAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRITERION_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRITERION_DECL__Group__3__Impl
	rule__CRITERION_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getCritAssignment_3()); }
(rule__CRITERION_DECL__CritAssignment_3)
{ after(grammarAccess.getCRITERION_DECLAccess().getCritAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CRITERION_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CRITERION_DECL__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getSemicolonKeyword_4()); }
(
	';' 
)?
{ after(grammarAccess.getCRITERION_DECLAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DATASEL_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__0__Impl
	rule__DATASEL_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getDataselKeyword_0()); }

	'datasel' 

{ after(grammarAccess.getDATASEL_DECLAccess().getDataselKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__1__Impl
	rule__DATASEL_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDATASEL_DECLAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__2__Impl
	rule__DATASEL_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getDATASEL_DECLAction_2()); }
(

)
{ after(grammarAccess.getDATASEL_DECLAccess().getDATASEL_DECLAction_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__3__Impl
	rule__DATASEL_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getData1Assignment_3()); }
(rule__DATASEL_DECL__Data1Assignment_3)
{ after(grammarAccess.getDATASEL_DECLAccess().getData1Assignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__4__Impl
	rule__DATASEL_DECL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getGroup_4()); }
(rule__DATASEL_DECL__Group_4__0)?
{ after(grammarAccess.getDATASEL_DECLAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getDATASEL_DECLAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DATASEL_DECL__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group_4__0__Impl
	rule__DATASEL_DECL__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getCommaKeyword_4_0()); }

	',' 

{ after(grammarAccess.getDATASEL_DECLAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DATASEL_DECL__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DATASEL_DECL__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getData2Assignment_4_1()); }
(rule__DATASEL_DECL__Data2Assignment_4_1)
{ after(grammarAccess.getDATASEL_DECLAccess().getData2Assignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VAR_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__0__Impl
	rule__VAR_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getVAR_DECLAction_0()); }
(

)
{ after(grammarAccess.getVAR_DECLAccess().getVAR_DECLAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__1__Impl
	rule__VAR_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getFlowAssignment_1()); }
(rule__VAR_DECL__FlowAssignment_1)
{ after(grammarAccess.getVAR_DECLAccess().getFlowAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__2__Impl
	rule__VAR_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getNameAssignment_2()); }
(rule__VAR_DECL__NameAssignment_2)
{ after(grammarAccess.getVAR_DECLAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__3__Impl
	rule__VAR_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getVAR_DECLAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__4__Impl
	rule__VAR_DECL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getTypeAssignment_4()); }
(rule__VAR_DECL__TypeAssignment_4)
{ after(grammarAccess.getVAR_DECLAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__5__Impl
	rule__VAR_DECL__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getRangeAssignment_5()); }
(rule__VAR_DECL__RangeAssignment_5)?
{ after(grammarAccess.getVAR_DECLAccess().getRangeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VAR_DECL__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VAR_DECL__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getSemicolonKeyword_6()); }
(
	';' 
)?
{ after(grammarAccess.getVAR_DECLAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CST_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__0__Impl
	rule__CST_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getCST_DECLAction_0()); }
(

)
{ after(grammarAccess.getCST_DECLAccess().getCST_DECLAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__1__Impl
	rule__CST_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getFlowAssignment_1()); }
(rule__CST_DECL__FlowAssignment_1)
{ after(grammarAccess.getCST_DECLAccess().getFlowAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__2__Impl
	rule__CST_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getTypeAssignment_2()); }
(rule__CST_DECL__TypeAssignment_2)
{ after(grammarAccess.getCST_DECLAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__3__Impl
	rule__CST_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getNameAssignment_3()); }
(rule__CST_DECL__NameAssignment_3)
{ after(grammarAccess.getCST_DECLAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__4__Impl
	rule__CST_DECL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getEqualsSignEqualsSignKeyword_4()); }

	'==' 

{ after(grammarAccess.getCST_DECLAccess().getEqualsSignEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__5__Impl
	rule__CST_DECL__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getValueAssignment_5()); }
(rule__CST_DECL__ValueAssignment_5)
{ after(grammarAccess.getCST_DECLAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CST_DECL__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CST_DECL__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getSemicolonKeyword_6()); }
(
	';' 
)?
{ after(grammarAccess.getCST_DECLAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TmpVAR_DECL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__0__Impl
	rule__TmpVAR_DECL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getTmpVAR_DECLAction_0()); }
(

)
{ after(grammarAccess.getTmpVAR_DECLAccess().getTmpVAR_DECLAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmpVAR_DECL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__1__Impl
	rule__TmpVAR_DECL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getTypeAssignment_1()); }
(rule__TmpVAR_DECL__TypeAssignment_1)
{ after(grammarAccess.getTmpVAR_DECLAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmpVAR_DECL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__2__Impl
	rule__TmpVAR_DECL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getNameAssignment_2()); }
(rule__TmpVAR_DECL__NameAssignment_2)
{ after(grammarAccess.getTmpVAR_DECLAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmpVAR_DECL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__3__Impl
	rule__TmpVAR_DECL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getInitKeyword_3()); }

	'init' 

{ after(grammarAccess.getTmpVAR_DECLAccess().getInitKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmpVAR_DECL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__4__Impl
	rule__TmpVAR_DECL__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getValueAssignment_4()); }
(rule__TmpVAR_DECL__ValueAssignment_4)
{ after(grammarAccess.getTmpVAR_DECLAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TmpVAR_DECL__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TmpVAR_DECL__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getTmpVAR_DECLAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__INTERVAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERVAL__Group__0__Impl
	rule__INTERVAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getLsqbrAssignment_0()); }
(rule__INTERVAL__LsqbrAssignment_0)
{ after(grammarAccess.getINTERVALAccess().getLsqbrAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERVAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERVAL__Group__1__Impl
	rule__INTERVAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getMinAssignment_1()); }
(rule__INTERVAL__MinAssignment_1)
{ after(grammarAccess.getINTERVALAccess().getMinAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERVAL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERVAL__Group__2__Impl
	rule__INTERVAL__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getFullStopFullStopKeyword_2()); }

	'..' 

{ after(grammarAccess.getINTERVALAccess().getFullStopFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERVAL__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERVAL__Group__3__Impl
	rule__INTERVAL__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getMaxAssignment_3()); }
(rule__INTERVAL__MaxAssignment_3)
{ after(grammarAccess.getINTERVALAccess().getMaxAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTERVAL__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTERVAL__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getRsqbrAssignment_4()); }
(rule__INTERVAL__RsqbrAssignment_4)
{ after(grammarAccess.getINTERVALAccess().getRsqbrAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LSET__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group__0__Impl
	rule__LSET__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getLSETAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LSET__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group__1__Impl
	rule__LSET__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getLSETAction_1()); }
(

)
{ after(grammarAccess.getLSETAccess().getLSETAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LSET__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group__2__Impl
	rule__LSET__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getValueAssignment_2()); }
(rule__LSET__ValueAssignment_2)
{ after(grammarAccess.getLSETAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LSET__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group__3__Impl
	rule__LSET__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getGroup_3()); }
(rule__LSET__Group_3__0)*
{ after(grammarAccess.getLSETAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LSET__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getLSETAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LSET__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group_3__0__Impl
	rule__LSET__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getLSETAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LSET__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LSET__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getValueAssignment_3_1()); }
(rule__LSET__ValueAssignment_3_1)
{ after(grammarAccess.getLSETAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__0__Impl
	rule__Literal__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getIntLITERALAction_0_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getIntLITERALAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); }
(rule__Literal__ValueAssignment_0_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__0__Impl
	rule__Literal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getRealLITERALAction_1_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getRealLITERALAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); }
(rule__Literal__ValueAssignment_1_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__0__Impl
	rule__Literal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBoolLITERALAction_2_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getBoolLITERALAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
(rule__Literal__ValueAssignment_2_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_3__0__Impl
	rule__Literal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStrLITERALAction_3_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getStrLITERALAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_3_1()); }
(rule__Literal__ValueAssignment_3_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__0__Impl
	rule__Literal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getEnumLITERALAction_4_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getEnumLITERALAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_4_1()); }
(rule__Literal__ValueAssignment_4_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__0__Impl
	rule__Literal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getBitLITERALAction_5_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getBitLITERALAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_5_1()); }
(rule__Literal__ValueAssignment_5_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__0__Impl
	rule__Literal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getHexLITERALAction_6_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getHexLITERALAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_6_1()); }
(rule__Literal__ValueAssignment_6_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Literal__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__0__Impl
	rule__Literal__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getUnknowLITERALAction_7_0()); }
(

)
{ after(grammarAccess.getLiteralAccess().getUnknowLITERALAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Literal__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Literal__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueAssignment_7_1()); }
(rule__Literal__ValueAssignment_7_1)
{ after(grammarAccess.getLiteralAccess().getValueAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IF_STATEMENT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__0__Impl
	rule__IF_STATEMENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIF_STATEMENTAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__1__Impl
	rule__IF_STATEMENT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIF_STATEMENTAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__2__Impl
	rule__IF_STATEMENT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getIfCondAssignment_2()); }
(rule__IF_STATEMENT__IfCondAssignment_2)
{ after(grammarAccess.getIF_STATEMENTAccess().getIfCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__3__Impl
	rule__IF_STATEMENT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getIF_STATEMENTAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__4__Impl
	rule__IF_STATEMENT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getIF_STATEMENTAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__5__Impl
	rule__IF_STATEMENT__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getIfstAssignment_5()); }
(rule__IF_STATEMENT__IfstAssignment_5)*
{ after(grammarAccess.getIF_STATEMENTAccess().getIfstAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__6__Impl
	rule__IF_STATEMENT__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getIF_STATEMENTAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getGroup_7()); }
(rule__IF_STATEMENT__Group_7__0)
{ after(grammarAccess.getIF_STATEMENTAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__IF_STATEMENT__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group_7__0__Impl
	rule__IF_STATEMENT__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getElseKeyword_7_0()); }
(
	'else' 
)
{ after(grammarAccess.getIF_STATEMENTAccess().getElseKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group_7__1__Impl
	rule__IF_STATEMENT__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getLeftCurlyBracketKeyword_7_1()); }

	'{' 

{ after(grammarAccess.getIF_STATEMENTAccess().getLeftCurlyBracketKeyword_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group_7__2__Impl
	rule__IF_STATEMENT__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getElstAssignment_7_2()); }
(rule__IF_STATEMENT__ElstAssignment_7_2)*
{ after(grammarAccess.getIF_STATEMENTAccess().getElstAssignment_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IF_STATEMENT__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IF_STATEMENT__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getRightCurlyBracketKeyword_7_3()); }

	'}' 

{ after(grammarAccess.getIF_STATEMENTAccess().getRightCurlyBracketKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LOOP_STATEMENT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LOOP_STATEMENT__Group__0__Impl
	rule__LOOP_STATEMENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP_STATEMENT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getLoopKeyword_0()); }

	'loop' 

{ after(grammarAccess.getLOOP_STATEMENTAccess().getLoopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP_STATEMENT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LOOP_STATEMENT__Group__1__Impl
	rule__LOOP_STATEMENT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP_STATEMENT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getLOOP_STATEMENTAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP_STATEMENT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LOOP_STATEMENT__Group__2__Impl
	rule__LOOP_STATEMENT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP_STATEMENT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getLoopCondAssignment_2()); }
(rule__LOOP_STATEMENT__LoopCondAssignment_2)
{ after(grammarAccess.getLOOP_STATEMENTAccess().getLoopCondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LOOP_STATEMENT__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LOOP_STATEMENT__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP_STATEMENT__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getLOOP_STATEMENTAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ERROR_STATEMENT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ERROR_STATEMENT__Group__0__Impl
	rule__ERROR_STATEMENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ERROR_STATEMENT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getERROR_STATEMENTAccess().getErrorKeyword_0()); }

	'error' 

{ after(grammarAccess.getERROR_STATEMENTAccess().getErrorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ERROR_STATEMENT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ERROR_STATEMENT__Group__1__Impl
	rule__ERROR_STATEMENT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ERROR_STATEMENT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getERROR_STATEMENTAccess().getERROR_STATEMENTAction_1()); }
(

)
{ after(grammarAccess.getERROR_STATEMENTAccess().getERROR_STATEMENTAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ERROR_STATEMENT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ERROR_STATEMENT__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ERROR_STATEMENT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getERROR_STATEMENTAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getERROR_STATEMENTAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ASSIGN_STATEMENT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASSIGN_STATEMENT__Group__0__Impl
	rule__ASSIGN_STATEMENT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getLeftAssignment_0()); }
(rule__ASSIGN_STATEMENT__LeftAssignment_0)
{ after(grammarAccess.getASSIGN_STATEMENTAccess().getLeftAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASSIGN_STATEMENT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASSIGN_STATEMENT__Group__1__Impl
	rule__ASSIGN_STATEMENT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getASSIGN_STATEMENTAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASSIGN_STATEMENT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASSIGN_STATEMENT__Group__2__Impl
	rule__ASSIGN_STATEMENT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getRightAssignment_2()); }
(rule__ASSIGN_STATEMENT__RightAssignment_2)
{ after(grammarAccess.getASSIGN_STATEMENTAccess().getRightAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASSIGN_STATEMENT__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASSIGN_STATEMENT__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getSemicolonKeyword_3()); }
(
	';' 
)?
{ after(grammarAccess.getASSIGN_STATEMENTAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OR__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OR__Group__0__Impl
	rule__OR__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getANDParserRuleCall_0()); }
	ruleAND
{ after(grammarAccess.getORAccess().getANDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OR__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OR__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getGroup_1()); }
(rule__OR__Group_1__0)*
{ after(grammarAccess.getORAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OR__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OR__Group_1__0__Impl
	rule__OR__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getORLeftAction_1_0()); }
(

)
{ after(grammarAccess.getORAccess().getORLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OR__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OR__Group_1__1__Impl
	rule__OR__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getOrKeyword_1_1()); }

	'or' 

{ after(grammarAccess.getORAccess().getOrKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OR__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OR__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OR__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getRightAssignment_1_2()); }
(rule__OR__RightAssignment_1_2)
{ after(grammarAccess.getORAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AND__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND__Group__0__Impl
	rule__AND__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getEQUAL_DIFFParserRuleCall_0()); }
	ruleEQUAL_DIFF
{ after(grammarAccess.getANDAccess().getEQUAL_DIFFParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getGroup_1()); }
(rule__AND__Group_1__0)*
{ after(grammarAccess.getANDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AND__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND__Group_1__0__Impl
	rule__AND__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getANDLeftAction_1_0()); }
(

)
{ after(grammarAccess.getANDAccess().getANDLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND__Group_1__1__Impl
	rule__AND__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getAndKeyword_1_1()); }

	'and' 

{ after(grammarAccess.getANDAccess().getAndKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AND__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AND__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AND__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getRightAssignment_1_2()); }
(rule__AND__RightAssignment_1_2)
{ after(grammarAccess.getANDAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EQUAL_DIFF__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EQUAL_DIFF__Group__0__Impl
	rule__EQUAL_DIFF__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getCOMPARISONParserRuleCall_0()); }
	ruleCOMPARISON
{ after(grammarAccess.getEQUAL_DIFFAccess().getCOMPARISONParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EQUAL_DIFF__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EQUAL_DIFF__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getGroup_1()); }
(rule__EQUAL_DIFF__Group_1__0)*
{ after(grammarAccess.getEQUAL_DIFFAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EQUAL_DIFF__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EQUAL_DIFF__Group_1__0__Impl
	rule__EQUAL_DIFF__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getEQUAL_DIFFLeftAction_1_0()); }
(

)
{ after(grammarAccess.getEQUAL_DIFFAccess().getEQUAL_DIFFLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EQUAL_DIFF__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EQUAL_DIFF__Group_1__1__Impl
	rule__EQUAL_DIFF__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getOpAssignment_1_1()); }
(rule__EQUAL_DIFF__OpAssignment_1_1)
{ after(grammarAccess.getEQUAL_DIFFAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EQUAL_DIFF__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EQUAL_DIFF__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getRightAssignment_1_2()); }
(rule__EQUAL_DIFF__RightAssignment_1_2)
{ after(grammarAccess.getEQUAL_DIFFAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__COMPARISON__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__COMPARISON__Group__0__Impl
	rule__COMPARISON__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getADD_SUBParserRuleCall_0()); }
	ruleADD_SUB
{ after(grammarAccess.getCOMPARISONAccess().getADD_SUBParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__COMPARISON__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__COMPARISON__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getGroup_1()); }
(rule__COMPARISON__Group_1__0)*
{ after(grammarAccess.getCOMPARISONAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__COMPARISON__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__COMPARISON__Group_1__0__Impl
	rule__COMPARISON__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getCOMPARISONLeftAction_1_0()); }
(

)
{ after(grammarAccess.getCOMPARISONAccess().getCOMPARISONLeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__COMPARISON__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__COMPARISON__Group_1__1__Impl
	rule__COMPARISON__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getOpAssignment_1_1()); }
(rule__COMPARISON__OpAssignment_1_1)
{ after(grammarAccess.getCOMPARISONAccess().getOpAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__COMPARISON__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__COMPARISON__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getRightAssignment_1_2()); }
(rule__COMPARISON__RightAssignment_1_2)
{ after(grammarAccess.getCOMPARISONAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ADD_SUB__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group__0__Impl
	rule__ADD_SUB__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getMULT_DIVParserRuleCall_0()); }
	ruleMULT_DIV
{ after(grammarAccess.getADD_SUBAccess().getMULT_DIVParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADD_SUB__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getGroup_1()); }
(rule__ADD_SUB__Group_1__0)*
{ after(grammarAccess.getADD_SUBAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ADD_SUB__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1__0__Impl
	rule__ADD_SUB__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getAlternatives_1_0()); }
(rule__ADD_SUB__Alternatives_1_0)
{ after(grammarAccess.getADD_SUBAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADD_SUB__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getRightAssignment_1_1()); }
(rule__ADD_SUB__RightAssignment_1_1)
{ after(grammarAccess.getADD_SUBAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ADD_SUB__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1_0_0__0__Impl
	rule__ADD_SUB__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getADDLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getADD_SUBAccess().getADDLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADD_SUB__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getPlusSignKeyword_1_0_0_1()); }

	'+' 

{ after(grammarAccess.getADD_SUBAccess().getPlusSignKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ADD_SUB__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1_0_1__0__Impl
	rule__ADD_SUB__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getSUBLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getADD_SUBAccess().getSUBLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADD_SUB__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADD_SUB__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getHyphenMinusKeyword_1_0_1_1()); }

	'-' 

{ after(grammarAccess.getADD_SUBAccess().getHyphenMinusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MULT_DIV__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group__0__Impl
	rule__MULT_DIV__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getPrimaryExpressionParserRuleCall_0()); }
	rulePrimaryExpression
{ after(grammarAccess.getMULT_DIVAccess().getPrimaryExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MULT_DIV__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getGroup_1()); }
(rule__MULT_DIV__Group_1__0)*
{ after(grammarAccess.getMULT_DIVAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MULT_DIV__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1__0__Impl
	rule__MULT_DIV__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getAlternatives_1_0()); }
(rule__MULT_DIV__Alternatives_1_0)
{ after(grammarAccess.getMULT_DIVAccess().getAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MULT_DIV__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getRightAssignment_1_1()); }
(rule__MULT_DIV__RightAssignment_1_1)
{ after(grammarAccess.getMULT_DIVAccess().getRightAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MULT_DIV__Group_1_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1_0_0__0__Impl
	rule__MULT_DIV__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getMULTLeftAction_1_0_0_0()); }
(

)
{ after(grammarAccess.getMULT_DIVAccess().getMULTLeftAction_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MULT_DIV__Group_1_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getAsteriskKeyword_1_0_0_1()); }

	'*' 

{ after(grammarAccess.getMULT_DIVAccess().getAsteriskKeyword_1_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MULT_DIV__Group_1_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1_0_1__0__Impl
	rule__MULT_DIV__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getDIVLeftAction_1_0_1_0()); }
(

)
{ after(grammarAccess.getMULT_DIVAccess().getDIVLeftAction_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MULT_DIV__Group_1_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MULT_DIV__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__Group_1_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getSolidusKeyword_1_0_1_1()); }

	'/' 

{ after(grammarAccess.getMULT_DIVAccess().getSolidusKeyword_1_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimaryExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__0__Impl
	rule__PrimaryExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }

	'(' 

{ after(grammarAccess.getPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__1__Impl
	rule__PrimaryExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getEXPRESSIONParserRuleCall_0_1()); }
	ruleEXPRESSION
{ after(grammarAccess.getPrimaryExpressionAccess().getEXPRESSIONParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimaryExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__0__Impl
	rule__PrimaryExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNOTAction_1_0()); }
(

)
{ after(grammarAccess.getPrimaryExpressionAccess().getNOTAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__1__Impl
	rule__PrimaryExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getNotKeyword_1_1()); }

	'not' 

{ after(grammarAccess.getPrimaryExpressionAccess().getNotKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimaryExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimaryExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpAssignment_1_2()); }
(rule__PrimaryExpression__ExpAssignment_1_2)
{ after(grammarAccess.getPrimaryExpressionAccess().getExpAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Atomic__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__0__Impl
	rule__Atomic__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getIntConstantAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
(rule__Atomic__ValueAssignment_0_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__0__Impl
	rule__Atomic__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getRealConstantAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
(rule__Atomic__ValueAssignment_1_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__0__Impl
	rule__Atomic__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getStrConstantAction_2_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getStrConstantAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
(rule__Atomic__ValueAssignment_2_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__0__Impl
	rule__Atomic__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getEnumConstantAction_3_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getEnumConstantAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
(rule__Atomic__ValueAssignment_3_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__0__Impl
	rule__Atomic__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getBoolConstantAction_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
(rule__Atomic__ValueAssignment_4_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__0__Impl
	rule__Atomic__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getBitConstantAction_5_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getBitConstantAction_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
(rule__Atomic__ValueAssignment_5_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_6__0__Impl
	rule__Atomic__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getHexConstantAction_6_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getHexConstantAction_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueAssignment_6_1()); }
(rule__Atomic__ValueAssignment_6_1)
{ after(grammarAccess.getAtomicAccess().getValueAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Atomic__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_7__0__Impl
	rule__Atomic__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getVarExpRefAction_7_0()); }
(

)
{ after(grammarAccess.getAtomicAccess().getVarExpRefAction_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Atomic__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Atomic__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getVrefAssignment_7_1()); }
(rule__Atomic__VrefAssignment_7_1)
{ after(grammarAccess.getAtomicAccess().getVrefAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DECIMAL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__0__Impl
	rule__DECIMAL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getDECIMALAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__1__Impl
	rule__DECIMAL__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getGroup_2()); }
(rule__DECIMAL__Group_2__0)
{ after(grammarAccess.getDECIMALAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DECIMAL__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_2__0__Impl
	rule__DECIMAL__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getFullStopKeyword_2_0()); }

	'.' 

{ after(grammarAccess.getDECIMALAccess().getFullStopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DECIMAL__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DECIMAL__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DECIMAL__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_2_1()); }
	RULE_INT
{ after(grammarAccess.getDECIMALAccess().getINTTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__INTEGER__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTEGER__Group__0__Impl
	rule__INTEGER__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__INTEGER__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__INTEGER__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__INTEGER__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__INTEGER__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__LANGUAGE__ModulesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLANGUAGEAccess().getModulesMODULE_DECLParserRuleCall_0()); }
	ruleMODULE_DECL{ after(grammarAccess.getLANGUAGEAccess().getModulesMODULE_DECLParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
	RULE_IDENT{ after(grammarAccess.getMODULE_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__StrategyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getStrategySTRATEGYParserRuleCall_4_0()); }
	ruleSTRATEGY{ after(grammarAccess.getMODULE_DECLAccess().getStrategySTRATEGYParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__InterfaceAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getInterfaceINTERFACEParserRuleCall_5_0()); }
	ruleINTERFACE{ after(grammarAccess.getMODULE_DECLAccess().getInterfaceINTERFACEParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MODULE_DECL__BodyAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMODULE_DECLAccess().getBodyBODYParserRuleCall_6_0()); }
	ruleBODY{ after(grammarAccess.getMODULE_DECLAccess().getBodyBODYParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__CritdeclAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getCritdeclCRITERION_DECLParserRuleCall_4_0()); }
	ruleCRITERION_DECL{ after(grammarAccess.getSTRATEGYAccess().getCritdeclCRITERION_DECLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__STRATEGY__DataseldeclAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSTRATEGYAccess().getDataseldeclDATASEL_DECLParserRuleCall_5_0()); }
	ruleDATASEL_DECL{ after(grammarAccess.getSTRATEGYAccess().getDataseldeclDATASEL_DECLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERFACE__DeclarationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERFACEAccess().getDeclarationAbstractVAR_DECLParserRuleCall_4_0()); }
	ruleAbstractVAR_DECL{ after(grammarAccess.getINTERFACEAccess().getDeclarationAbstractVAR_DECLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BODY__StatementsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBODYAccess().getStatementsSTATEMENTParserRuleCall_4_0()); }
	ruleSTATEMENT{ after(grammarAccess.getBODYAccess().getStatementsSTATEMENTParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION_DECL__CritAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERION_DECLAccess().getCritCRITERIONParserRuleCall_3_0()); }
	ruleCRITERION{ after(grammarAccess.getCRITERION_DECLAccess().getCritCRITERIONParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Data1Assignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getData1DATASELParserRuleCall_3_0()); }
	ruleDATASEL{ after(grammarAccess.getDATASEL_DECLAccess().getData1DATASELParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL_DECL__Data2Assignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASEL_DECLAccess().getData2DATASELParserRuleCall_4_1_0()); }
	ruleDATASEL{ after(grammarAccess.getDATASEL_DECLAccess().getData2DATASELParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CRITERION__CritAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCRITERIONAccess().getCritAlternatives_0()); }
(rule__CRITERION__CritAlternatives_0)
{ after(grammarAccess.getCRITERIONAccess().getCritAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DATASEL__SelAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDATASELAccess().getSelAlternatives_0()); }
(rule__DATASEL__SelAlternatives_0)
{ after(grammarAccess.getDATASELAccess().getSelAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__FlowAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getFlowFlowParserRuleCall_1_0()); }
	ruleFlow{ after(grammarAccess.getVAR_DECLAccess().getFlowFlowParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
	RULE_IDENT{ after(grammarAccess.getVAR_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getTypeTYPEParserRuleCall_4_0()); }
	ruleTYPE{ after(grammarAccess.getVAR_DECLAccess().getTypeTYPEParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_DECL__RangeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_DECLAccess().getRangeRANGEParserRuleCall_5_0()); }
	ruleRANGE{ after(grammarAccess.getVAR_DECLAccess().getRangeRANGEParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Flow__FlowAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFlowAccess().getFlowAlternatives_0()); }
(rule__Flow__FlowAlternatives_0)
{ after(grammarAccess.getFlowAccess().getFlowAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__FlowAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getFlowConstKeyword_1_0()); }
(
{ before(grammarAccess.getCST_DECLAccess().getFlowConstKeyword_1_0()); }

	'const' 

{ after(grammarAccess.getCST_DECLAccess().getFlowConstKeyword_1_0()); }
)

{ after(grammarAccess.getCST_DECLAccess().getFlowConstKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getTypeTYPEParserRuleCall_2_0()); }
	ruleTYPE{ after(grammarAccess.getCST_DECLAccess().getTypeTYPEParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getNameIDENTTerminalRuleCall_3_0()); }
	RULE_IDENT{ after(grammarAccess.getCST_DECLAccess().getNameIDENTTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CST_DECL__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCST_DECLAccess().getValueLiteralParserRuleCall_5_0()); }
	ruleLiteral{ after(grammarAccess.getCST_DECLAccess().getValueLiteralParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getTypeTYPEParserRuleCall_1_0()); }
	ruleTYPE{ after(grammarAccess.getTmpVAR_DECLAccess().getTypeTYPEParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
	RULE_IDENT{ after(grammarAccess.getTmpVAR_DECLAccess().getNameIDENTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TmpVAR_DECL__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTmpVAR_DECLAccess().getValueEXPRESSIONParserRuleCall_4_0()); }
	ruleEXPRESSION{ after(grammarAccess.getTmpVAR_DECLAccess().getValueEXPRESSIONParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TYPE__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTYPEAccess().getTypeAlternatives_0()); }
(rule__TYPE__TypeAlternatives_0)
{ after(grammarAccess.getTYPEAccess().getTypeAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__LsqbrAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getLsqbrAlternatives_0_0()); }
(rule__INTERVAL__LsqbrAlternatives_0_0)
{ after(grammarAccess.getINTERVALAccess().getLsqbrAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__MinAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getMinLiteralParserRuleCall_1_0()); }
	ruleLiteral{ after(grammarAccess.getINTERVALAccess().getMinLiteralParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__MaxAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getMaxLiteralParserRuleCall_3_0()); }
	ruleLiteral{ after(grammarAccess.getINTERVALAccess().getMaxLiteralParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__INTERVAL__RsqbrAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getINTERVALAccess().getRsqbrAlternatives_4_0()); }
(rule__INTERVAL__RsqbrAlternatives_4_0)
{ after(grammarAccess.getINTERVALAccess().getRsqbrAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getValueLiteralParserRuleCall_2_0()); }
	ruleLiteral{ after(grammarAccess.getLSETAccess().getValueLiteralParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LSET__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLSETAccess().getValueLiteralParserRuleCall_3_1_0()); }
	ruleLiteral{ after(grammarAccess.getLSETAccess().getValueLiteralParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueINTEGERParserRuleCall_0_1_0()); }
	ruleINTEGER{ after(grammarAccess.getLiteralAccess().getValueINTEGERParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueDECIMALParserRuleCall_1_1_0()); }
	ruleDECIMAL{ after(grammarAccess.getLiteralAccess().getValueDECIMALParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueBOOLEANTerminalRuleCall_2_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getLiteralAccess().getValueBOOLEANTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
	RULE_STRING{ after(grammarAccess.getLiteralAccess().getValueSTRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueENUM_ELEMENTTerminalRuleCall_4_1_0()); }
	RULE_ENUM_ELEMENT{ after(grammarAccess.getLiteralAccess().getValueENUM_ELEMENTTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueBITTerminalRuleCall_5_1_0()); }
	RULE_BIT{ after(grammarAccess.getLiteralAccess().getValueBITTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueHEXTerminalRuleCall_6_1_0()); }
	RULE_HEX{ after(grammarAccess.getLiteralAccess().getValueHEXTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__ValueAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getValueQuestionMarkKeyword_7_1_0()); }
(
{ before(grammarAccess.getLiteralAccess().getValueQuestionMarkKeyword_7_1_0()); }

	'?' 

{ after(grammarAccess.getLiteralAccess().getValueQuestionMarkKeyword_7_1_0()); }
)

{ after(grammarAccess.getLiteralAccess().getValueQuestionMarkKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__IfCondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getIfCondEXPRESSIONParserRuleCall_2_0()); }
	ruleEXPRESSION{ after(grammarAccess.getIF_STATEMENTAccess().getIfCondEXPRESSIONParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__IfstAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getIfstSTATEMENTParserRuleCall_5_0()); }
	ruleSTATEMENT{ after(grammarAccess.getIF_STATEMENTAccess().getIfstSTATEMENTParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IF_STATEMENT__ElstAssignment_7_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIF_STATEMENTAccess().getElstSTATEMENTParserRuleCall_7_2_0()); }
	ruleSTATEMENT{ after(grammarAccess.getIF_STATEMENTAccess().getElstSTATEMENTParserRuleCall_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LOOP_STATEMENT__LoopCondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLOOP_STATEMENTAccess().getLoopCondEXPRESSIONParserRuleCall_2_0()); }
	ruleEXPRESSION{ after(grammarAccess.getLOOP_STATEMENTAccess().getLoopCondEXPRESSIONParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__LeftAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getLeftVAR_REFParserRuleCall_0_0()); }
	ruleVAR_REF{ after(grammarAccess.getASSIGN_STATEMENTAccess().getLeftVAR_REFParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASSIGN_STATEMENT__RightAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASSIGN_STATEMENTAccess().getRightEXPRESSIONParserRuleCall_2_0()); }
	ruleEXPRESSION{ after(grammarAccess.getASSIGN_STATEMENTAccess().getRightEXPRESSIONParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VAR_REF__VariableAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVAR_REFAccess().getVariableAbstractVAR_DECLCrossReference_0()); }
(
{ before(grammarAccess.getVAR_REFAccess().getVariableAbstractVAR_DECLIDENTTerminalRuleCall_0_1()); }
	RULE_IDENT{ after(grammarAccess.getVAR_REFAccess().getVariableAbstractVAR_DECLIDENTTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVAR_REFAccess().getVariableAbstractVAR_DECLCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OR__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getORAccess().getRightANDParserRuleCall_1_2_0()); }
	ruleAND{ after(grammarAccess.getORAccess().getRightANDParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AND__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getANDAccess().getRightEQUAL_DIFFParserRuleCall_1_2_0()); }
	ruleEQUAL_DIFF{ after(grammarAccess.getANDAccess().getRightEQUAL_DIFFParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getOpAlternatives_1_1_0()); }
(rule__EQUAL_DIFF__OpAlternatives_1_1_0)
{ after(grammarAccess.getEQUAL_DIFFAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EQUAL_DIFF__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEQUAL_DIFFAccess().getRightCOMPARISONParserRuleCall_1_2_0()); }
	ruleCOMPARISON{ after(grammarAccess.getEQUAL_DIFFAccess().getRightCOMPARISONParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__OpAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getOpAlternatives_1_1_0()); }
(rule__COMPARISON__OpAlternatives_1_1_0)
{ after(grammarAccess.getCOMPARISONAccess().getOpAlternatives_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__COMPARISON__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCOMPARISONAccess().getRightADD_SUBParserRuleCall_1_2_0()); }
	ruleADD_SUB{ after(grammarAccess.getCOMPARISONAccess().getRightADD_SUBParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADD_SUB__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADD_SUBAccess().getRightMULT_DIVParserRuleCall_1_1_0()); }
	ruleMULT_DIV{ after(grammarAccess.getADD_SUBAccess().getRightMULT_DIVParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MULT_DIV__RightAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMULT_DIVAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
	rulePrimaryExpression{ after(grammarAccess.getMULT_DIVAccess().getRightPrimaryExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimaryExpression__ExpAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimaryExpressionAccess().getExpPrimaryExpressionParserRuleCall_1_2_0()); }
	rulePrimaryExpression{ after(grammarAccess.getPrimaryExpressionAccess().getExpPrimaryExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueINTEGERParserRuleCall_0_1_0()); }
	ruleINTEGER{ after(grammarAccess.getAtomicAccess().getValueINTEGERParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueDECIMALParserRuleCall_1_1_0()); }
	ruleDECIMAL{ after(grammarAccess.getAtomicAccess().getValueDECIMALParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getAtomicAccess().getValueSTRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueENUM_ELEMENTTerminalRuleCall_3_1_0()); }
	RULE_ENUM_ELEMENT{ after(grammarAccess.getAtomicAccess().getValueENUM_ELEMENTTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getAtomicAccess().getValueBOOLEANTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueBITTerminalRuleCall_5_1_0()); }
	RULE_BIT{ after(grammarAccess.getAtomicAccess().getValueBITTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__ValueAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getValueHEXTerminalRuleCall_6_1_0()); }
	RULE_HEX{ after(grammarAccess.getAtomicAccess().getValueHEXTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Atomic__VrefAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicAccess().getVrefAbstractVAR_DECLCrossReference_7_1_0()); }
(
{ before(grammarAccess.getAtomicAccess().getVrefAbstractVAR_DECLIDENTTerminalRuleCall_7_1_0_1()); }
	RULE_IDENT{ after(grammarAccess.getAtomicAccess().getVrefAbstractVAR_DECLIDENTTerminalRuleCall_7_1_0_1()); }
)
{ after(grammarAccess.getAtomicAccess().getVrefAbstractVAR_DECLCrossReference_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ENUM_ELEMENT : '_' RULE_IDENT;

RULE_BOOLEAN : ('true'|'false');

RULE_HEX : '0x' ('0'..'9'|'A'..'F')+;

RULE_IDENT : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_BIT : '$' ('0'|'1')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


